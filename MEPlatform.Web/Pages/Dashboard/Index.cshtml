@page
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@model MEPlatform.Web.Pages.Dashboard.IndexModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="h3"><i class="bi bi-speedometer2 me-2"></i>Dashboard</h1>
    <div>
        <span class="text-muted">Last updated: @DateTime.Now.ToString("MMM dd, yyyy HH:mm")</span>
        <button class="btn btn-outline-primary btn-sm ms-2" onclick="location.reload()">
            <i class="bi bi-arrow-clockwise"></i> Refresh
        </button>
    </div>
</div>

@if (Model.Dashboard != null)
{
    <!-- Key Performance Indicators -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="card bg-primary text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.Dashboard.Stats.TotalFrameworks</h4>
                            <p class="card-text">Total Frameworks</p>
                        </div>
                        <i class="bi bi-diagram-3" style="font-size: 2.5rem; opacity: 0.7;"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-success text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.Dashboard.Stats.TotalPrograms</h4>
                            <p class="card-text">Total Programs</p>
                        </div>
                        <i class="bi bi-folder" style="font-size: 2.5rem; opacity: 0.7;"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-info text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.Dashboard.Stats.TotalProjects</h4>
                            <p class="card-text">Total Projects</p>
                        </div>
                        <i class="bi bi-kanban" style="font-size: 2.5rem; opacity: 0.7;"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-warning text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.Dashboard.Stats.ActiveMeasurements</h4>
                            <p class="card-text">Active Measurements</p>
                        </div>
                        <i class="bi bi-graph-up" style="font-size: 2.5rem; opacity: 0.7;"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Progress Overview -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-graph-up me-2"></i>Overall Progress</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6>Overall Completion</h6>
                            <div class="progress mb-3" style="height: 25px;">
                                <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                     role="progressbar" 
                                     style="width: @Model.Dashboard.Stats.OverallProgress%"
                                     aria-valuenow="@Model.Dashboard.Stats.OverallProgress" 
                                     aria-valuemin="0" 
                                     aria-valuemax="100">
                                    @Model.Dashboard.Stats.OverallProgress.ToString("F1")%
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <canvas id="projectStatusChart" width="300" height="150"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-exclamation-triangle me-2"></i>Project Status</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span class="text-success"><i class="bi bi-check-circle me-1"></i>On Track</span>
                        <span class="badge bg-success">@Model.Dashboard.Stats.ProjectsOnTrack</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span class="text-warning"><i class="bi bi-exclamation-triangle me-1"></i>At Risk</span>
                        <span class="badge bg-warning">@Model.Dashboard.Stats.ProjectsAtRisk</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="text-danger"><i class="bi bi-x-circle me-1"></i>Delayed</span>
                        <span class="badge bg-danger">@Model.Dashboard.Stats.ProjectsDelayed</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Framework Performance Cards -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="bi bi-diagram-3 me-2"></i>Framework Performance</h5>
                    <a href="@Url.Page("/Monitoring/Frameworks")" class="btn btn-outline-primary btn-sm">View All</a>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var framework in Model.Dashboard.FrameworkPerformance.Take(3))
                        {
                            <div class="col-lg-4 mb-3">
                                <div class="card border-0 shadow-sm h-100">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start mb-3">
                                            <h6 class="card-title mb-0">@framework.Name</h6>
                                            <span class="badge @(framework.Status switch 
                                            {
                                                "On Track" => "bg-success",
                                                "At Risk" => "bg-warning",
                                                "Delayed" => "bg-danger",
                                                _ => "bg-secondary"
                                            })">@framework.Status</span>
                                        </div>
                                        <p class="text-muted small mb-3">@framework.Type</p>
                                        <div class="progress mb-3" style="height: 8px;">
                                            <div class="progress-bar" 
                                                 role="progressbar" 
                                                 style="width: @framework.Progress%"
                                                 aria-valuenow="@framework.Progress">
                                            </div>
                                        </div>
                                        <div class="d-flex justify-content-between text-sm">
                                            <span class="text-muted">@framework.CompletedProjects/@framework.TotalProjects projects</span>
                                            <span class="fw-bold">@framework.Progress.ToString("F1")%</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activities and Upcoming Deadlines -->
    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-clock-history me-2"></i>Recent Activities</h5>
                </div>
                <div class="card-body">
                    @if (Model.Dashboard.RecentActivities.Any())
                    {
                        <div class="timeline">
                            @foreach (var activity in Model.Dashboard.RecentActivities.Take(5))
                            {
                                <div class="timeline-item mb-3">
                                    <div class="d-flex">
                                        <div class="flex-shrink-0">
                                            <i class="bi @activity.Icon text-@activity.Color"></i>
                                        </div>
                                        <div class="flex-grow-1 ms-3">
                                            <h6 class="mb-1">@activity.Description</h6>
                                            <p class="text-muted small mb-0">
                                                by @activity.User - @activity.Timestamp.ToString("MMM dd, yyyy HH:mm")
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No recent activities</p>
                    }
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-calendar-event me-2"></i>Upcoming Deadlines</h5>
                </div>
                <div class="card-body">
                    @if (Model.Dashboard.UpcomingDeadlines.Any())
                    {
                        @foreach (var deadline in Model.Dashboard.UpcomingDeadlines.Take(5))
                        {
                            <div class="d-flex justify-content-between align-items-start mb-3 pb-3 border-bottom">
                                <div class="flex-grow-1">
                                    <h6 class="mb-1">@deadline.Title</h6>
                                    <p class="text-muted small mb-1">@deadline.Description</p>
                                    <small class="text-@(deadline.DaysUntilDue <= 3 ? "danger" : deadline.DaysUntilDue <= 7 ? "warning" : "muted")">
                                        @if (deadline.DaysUntilDue == 0)
                                        {
                                            <text>Due today</text>
                                        }
                                        else if (deadline.DaysUntilDue == 1)
                                        {
                                            <text>Due tomorrow</text>
                                        }
                                        else if (deadline.DaysUntilDue > 0)
                                        {
                                            <text>@deadline.DaysUntilDue days left</text>
                                        }
                                        else
                                        {
                                            <text>@Math.Abs(deadline.DaysUntilDue) days overdue</text>
                                        }
                                    </small>
                                </div>
                                <span class="badge @(deadline.Priority switch 
                                {
                                    "High" => "bg-danger",
                                    "Medium" => "bg-warning",
                                    "Low" => "bg-secondary",
                                    _ => "bg-secondary"
                                })">@deadline.Priority</span>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted text-center">No upcoming deadlines</p>
                    }
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-3">Loading dashboard data...</p>
    </div>
}

@section Scripts {
    <script>
        // Project Status Chart
        const ctx = document.getElementById('projectStatusChart').getContext('2d');
        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['On Track', 'At Risk', 'Delayed'],
                datasets: [{
                    data: [@Model.Dashboard.Stats.ProjectsOnTrack, @Model.Dashboard.Stats.ProjectsAtRisk, @Model.Dashboard.Stats.ProjectsDelayed],
                    backgroundColor: ['#198754', '#ffc107', '#dc3545']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });
    </script>
}